
import pytest

from app.core.config import Settings


def test_secret_key_required_in_production(monkeypatch):
    """Settings should reject missing SECRET_KEY outside dev/test."""
    monkeypatch.delenv("SECRET_KEY", raising=False)
    settings_kwargs = {"APP_ENV": "production", "SECRET_KEY": ""}
    with pytest.raises(ValueError):
        Settings(**settings_kwargs)


def test_secret_key_autogenerated_in_development(monkeypatch):
    """Development builds get an ephemeral key when one is not provided."""
    monkeypatch.delenv("SECRET_KEY", raising=False)
    settings = Settings(APP_ENV="development", SECRET_KEY="")

    assert settings.SECRET_KEY
    assert settings.SECRET_KEY_AUTO_GENERATED is True
    assert len(settings.SECRET_KEY) >= 32


@pytest.mark.parametrize("env", ["test", "testing"])
def test_secret_key_autogenerated_in_test_env(monkeypatch, env):
    monkeypatch.delenv("SECRET_KEY", raising=False)
    settings = Settings(APP_ENV=env, SECRET_KEY="")

    assert settings.SECRET_KEY
    assert settings.SECRET_KEY_AUTO_GENERATED is True
