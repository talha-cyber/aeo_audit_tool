"""Create personas table

Revision ID: 6164b2d1831c
Revises: 85cef3d4fbde
Create Date: 2025-10-01 14:16:15.165791

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6164b2d1831c'
down_revision: Union[str, None] = '85cef3d4fbde'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('personas',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('owner_id', sa.String(length=255), nullable=False),
    sa.Column('mode', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('segment', sa.String(length=255), nullable=True),
    sa.Column('priority', sa.String(length=50), nullable=True),
    sa.Column('key_need', sa.Text(), nullable=True),
    sa.Column('journey_stage', sa.JSON(), nullable=True),
    sa.Column('role', sa.String(length=255), nullable=True),
    sa.Column('driver', sa.String(length=255), nullable=True),
    sa.Column('voice', sa.String(length=255), nullable=True),
    sa.Column('contexts', sa.JSON(), nullable=True),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_personas_owner_id'), 'personas', ['owner_id'], unique=False)
    op.add_column('questions', sa.Column('provider_version', sa.String(), nullable=True))
    op.add_column('questions', sa.Column('persona', sa.String(), nullable=True))
    op.add_column('questions', sa.Column('role', sa.String(), nullable=True))
    op.add_column('questions', sa.Column('driver', sa.String(), nullable=True))
    op.add_column('questions', sa.Column('emotional_anchor', sa.String(), nullable=True))
    op.add_column('questions', sa.Column('context_stage', sa.String(), nullable=True))
    op.add_column('questions', sa.Column('seed_type', sa.String(), nullable=True))
    op.create_index('ix_questions_audit_run_persona', 'questions', ['audit_run_id', 'persona'], unique=False)
    op.create_index('ix_questions_driver_context_stage', 'questions', ['driver', 'context_stage'], unique=False)
    op.add_column('responses', sa.Column('emotional_satisfaction', sa.String(), nullable=True))
    op.add_column('responses', sa.Column('satisfaction_score', sa.Float(), nullable=True))
    op.add_column('responses', sa.Column('satisfaction_model', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('responses', 'satisfaction_model')
    op.drop_column('responses', 'satisfaction_score')
    op.drop_column('responses', 'emotional_satisfaction')
    op.drop_index('ix_questions_driver_context_stage', table_name='questions')
    op.drop_index('ix_questions_audit_run_persona', table_name='questions')
    op.drop_column('questions', 'seed_type')
    op.drop_column('questions', 'context_stage')
    op.drop_column('questions', 'emotional_anchor')
    op.drop_column('questions', 'driver')
    op.drop_column('questions', 'role')
    op.drop_column('questions', 'persona')
    op.drop_column('questions', 'provider_version')
    op.drop_index(op.f('ix_personas_owner_id'), table_name='personas')
    op.drop_table('personas')
    # ### end Alembic commands ###
